{
    "sourceFile": "src/components/nav/logout.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 31,
            "patches": [
                {
                    "date": 1745213927609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745214464638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,77 @@\n-import { useAuth } from \"@/context/AuthContext\"\n\\ No newline at end of file\n+import { useAuth } from \"@/context/AuthContext\"\r\n+\r\n+\r\n+import { useAuth } from \"@/context/AuthContext\";\r\n+import { useToast } from \"@/context/ToastContext\";\r\n+import { environment } from \"@/environments/environment\";\r\n+import axios from \"axios\";\r\n+import { useState } from \"react\";\r\n+\r\n+axios.defaults.baseURL = environment.apiUrl;\r\n+\r\n+export const useLogout = () => {\r\n+  const { authToken, logout } = useAuth();\r\n+  const [getResponse, setGetResponse] = useState<any>(null);\r\n+  const [loader, setLoader] = useState({ loading: false, action: \"\" });\r\n+\r\n+  const { showError, showSuccess } = useToast();\r\n+\r\n+  const postLogout = async () => {\r\n+    if (!authToken) {\r\n+      showError(\"No hay sesión activa\");\r\n+      return;\r\n+    }\r\n+\r\n+    const method = \"GET\";\r\n+    const url = \"/logout\";\r\n+\r\n+    setLoader({ loading: true, action: \"logout\" });\r\n+\r\n+    try {\r\n+      interface LogoutResponse {\r\n+        message: string;\r\n+        success: boolean;\r\n+      }\r\n+\r\n+      const response = await axios.request<LogoutResponse>({\r\n+        method,\r\n+        url,\r\n+        headers: {\r\n+          'Authorization': `Bearer ${authToken}`\r\n+        }\r\n+      });\r\n+\r\n+      if (response.data && response.data.success) {\r\n+        console.log(\"Logout successful:\", response.data.message);\r\n+        showSuccess(response.data.message || \"Sesión cerrada correctamente\");\r\n+        setGetResponse(response.data);\r\n+        \r\n+        // Llamar a la función de logout del contexto para limpiar el estado\r\n+        logout();\r\n+      } else {\r\n+        console.error(\"Invalid response data:\", response.data);\r\n+        setGetResponse(response.data);\r\n+        // Logout de todas formas por seguridad\r\n+        logout();\r\n+      }\r\n+    } catch (error: any) {\r\n+      showError(\r\n+        error.response?.data?.message || \"Ocurrió un error al cerrar sesión\"\r\n+      );\r\n+      console.error(\"Logout error:\", error);\r\n+      \r\n+      // Logout de todas formas por seguridad, incluso si falla la API\r\n+      logout();\r\n+      \r\n+      return error;\r\n+    } finally {\r\n+      setLoader({ loading: false, action: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  return {\r\n+    postLogout,\r\n+    getResponse,\r\n+    loader,\r\n+  };\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1745214470605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,5 @@\n-import { useAuth } from \"@/context/AuthContext\"\r\n \r\n-\r\n import { useAuth } from \"@/context/AuthContext\";\r\n import { useToast } from \"@/context/ToastContext\";\r\n import { environment } from \"@/environments/environment\";\r\n import axios from \"axios\";\r\n"
                },
                {
                    "date": 1745214486249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,10 +42,8 @@\n       if (response.data && response.data.success) {\r\n         console.log(\"Logout successful:\", response.data.message);\r\n         showSuccess(response.data.message || \"Sesión cerrada correctamente\");\r\n         setGetResponse(response.data);\r\n-        \r\n-        // Llamar a la función de logout del contexto para limpiar el estado\r\n         logout();\r\n       } else {\r\n         console.error(\"Invalid response data:\", response.data);\r\n         setGetResponse(response.data);\r\n"
                },
                {
                    "date": 1745214492461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n         logout();\r\n       } else {\r\n         console.error(\"Invalid response data:\", response.data);\r\n         setGetResponse(response.data);\r\n-        // Logout de todas formas por seguridad\r\n+        \r\n         logout();\r\n       }\r\n     } catch (error: any) {\r\n       showError(\r\n"
                },
                {
                    "date": 1745214505417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,8 @@\n         logout();\r\n       } else {\r\n         console.error(\"Invalid response data:\", response.data);\r\n         setGetResponse(response.data);\r\n-        \r\n         logout();\r\n       }\r\n     } catch (error: any) {\r\n       showError(\r\n"
                },
                {
                    "date": 1745214517028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,10 +53,8 @@\n       showError(\r\n         error.response?.data?.message || \"Ocurrió un error al cerrar sesión\"\r\n       );\r\n       console.error(\"Logout error:\", error);\r\n-      \r\n-      // Logout de todas formas por seguridad, incluso si falla la API\r\n       logout();\r\n       \r\n       return error;\r\n     } finally {\r\n"
                },
                {
                    "date": 1745214547398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n       showError(\"No hay sesión activa\");\r\n       return;\r\n     }\r\n \r\n-    const method = \"GET\";\r\n+    const method = \"POST\";\r\n     const url = \"/logout\";\r\n \r\n     setLoader({ loading: true, action: \"logout\" });\r\n \r\n@@ -54,9 +54,8 @@\n         error.response?.data?.message || \"Ocurrió un error al cerrar sesión\"\r\n       );\r\n       console.error(\"Logout error:\", error);\r\n       logout();\r\n-      \r\n       return error;\r\n     } finally {\r\n       setLoader({ loading: false, action: \"\" });\r\n     }\r\n"
                },
                {
                    "date": 1745214620170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-\r\n import { useAuth } from \"@/context/AuthContext\";\r\n import { useToast } from \"@/context/ToastContext\";\r\n import { environment } from \"@/environments/environment\";\r\n import axios from \"axios\";\r\n@@ -20,9 +19,10 @@\n       return;\r\n     }\r\n \r\n     const method = \"POST\";\r\n-    const url = \"/logout\";\r\n+    // URL con el token como parámetro de consulta\r\n+    const url = `/logout?secret_token=${authToken}`;\r\n \r\n     setLoader({ loading: true, action: \"logout\" });\r\n \r\n     try {\r\n@@ -34,8 +34,9 @@\n       const response = await axios.request<LogoutResponse>({\r\n         method,\r\n         url,\r\n         headers: {\r\n+          'Content-Type': 'application/json',\r\n           'Authorization': `Bearer ${authToken}`\r\n         }\r\n       });\r\n \r\n"
                },
                {
                    "date": 1745215401021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,10 +26,10 @@\n     setLoader({ loading: true, action: \"logout\" });\r\n \r\n     try {\r\n       interface LogoutResponse {\r\n-        message: string;\r\n-        success: boolean;\r\n+        message?: string;\r\n+        success?: boolean;\r\n       }\r\n \r\n       const response = await axios.request<LogoutResponse>({\r\n         method,\r\n@@ -39,24 +39,24 @@\n           'Authorization': `Bearer ${authToken}`\r\n         }\r\n       });\r\n \r\n-      if (response.data && response.data.success) {\r\n-        console.log(\"Logout successful:\", response.data.message);\r\n-        showSuccess(response.data.message || \"Sesión cerrada correctamente\");\r\n+      // Consideramos la respuesta exitosa si el status es 200/201 o si explícitamente tiene success=true\r\n+      if (response.status === 200 || response.status === 201 || response.data?.success) {\r\n+        console.log(\"Logout successful:\", response.data?.message);\r\n+        showSuccess(response.data?.message || \"Sesión cerrada correctamente\");\r\n         setGetResponse(response.data);\r\n         logout();\r\n       } else {\r\n         console.error(\"Invalid response data:\", response.data);\r\n+        showError(\"Error al cerrar sesión\");\r\n         setGetResponse(response.data);\r\n-        logout();\r\n       }\r\n     } catch (error: any) {\r\n       showError(\r\n         error.response?.data?.message || \"Ocurrió un error al cerrar sesión\"\r\n       );\r\n       console.error(\"Logout error:\", error);\r\n-      logout();\r\n       return error;\r\n     } finally {\r\n       setLoader({ loading: false, action: \"\" });\r\n     }\r\n"
                },
                {
                    "date": 1745215407420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n           'Authorization': `Bearer ${authToken}`\r\n         }\r\n       });\r\n \r\n-      // Consideramos la respuesta exitosa si el status es 200/201 o si explícitamente tiene success=true\r\n+      \r\n       if (response.status === 200 || response.status === 201 || response.data?.success) {\r\n         console.log(\"Logout successful:\", response.data?.message);\r\n         showSuccess(response.data?.message || \"Sesión cerrada correctamente\");\r\n         setGetResponse(response.data);\r\n"
                },
                {
                    "date": 1745289284002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,8 @@\n       });\r\n \r\n       \r\n       if (response.status === 200 || response.status === 201 || response.data?.success) {\r\n-        console.log(\"Logout successful:\", response.data?.message);\r\n         showSuccess(response.data?.message || \"Sesión cerrada correctamente\");\r\n         setGetResponse(response.data);\r\n         logout();\r\n       } else {\r\n"
                },
                {
                    "date": 1745289317049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+import { useAuth } from \"@/context/AuthContext\";\r\n+import { useToast } from \"@/context/ToastContext\";\r\n+import { environment } from \"@/environments/environment\";\r\n+import axios from \"axios\";\r\n+import { useState } from \"react\";\r\n+\r\n+axios.defaults.baseURL = environment.apiUrl;\r\n+\r\n+export const useLogout = () => {\r\n+  const { authToken, logout } = useAuth();\r\n+  const [getResponse, setGetResponse] = useState<any>(null);\r\n+  const [loader, setLoader] = useState({ loading: false, action: \"\" });\r\n+\r\n+  const { showError, showSuccess } = useToast();\r\n+\r\n+  const postLogout = async () => {\r\n+    if (!authToken) {\r\n+      showError(\"No hay sesión activa\");\r\n+      return;\r\n+    }\r\n+\r\n+    const method = \"POST\";\r\n+    // URL con el token como parámetro de consulta\r\n+    const url = `/logout?secret_token=${authToken}`;\r\n+\r\n+    setLoader({ loading: true, action: \"logout\" });\r\n+\r\n+    try {\r\n+      interface LogoutResponse {\r\n+        message?: string;\r\n+        success?: boolean;\r\n+      }\r\n+\r\n+      const response = await axios.request<LogoutResponse>({\r\n+        method,\r\n+        url,\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+          'Authorization': `Bearer ${authToken}`\r\n+        }\r\n+      });\r\n+\r\n+      \r\n+      if (response.status === 200 || response.status === 201 || response.data?.success) {\r\n+        showSuccess(response.data?.message || \"Sesión cerrada correctamente\");\r\n+        setGetResponse(response.data);\r\n+        logout();\r\n+      } else {\r\n+        console.error(\"Invalid response data:\", response.data);\r\n+        showError(\"Error al cerrar sesión\");\r\n+        setGetResponse(response.data);\r\n+      }\r\n+\r\n+      \r\n+    } catch (error: any) {\r\n+      showError(\r\n+        error.response?.data?.message || \"Ocurrió un error al cerrar sesión\"\r\n+      );\r\n+      console.error(\"Logout error:\", error);\r\n+      return error;\r\n+    } finally {\r\n+      setLoader({ loading: false, action: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  return {\r\n+    postLogout,\r\n+    getResponse,\r\n+    loader,\r\n+  };\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1745296520759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \r\n export const useLogout = () => {\r\n   const { authToken, logout } = useAuth();\r\n   const [getResponse, setGetResponse] = useState<any>(null);\r\n-  const [loader, setLoader] = useState({ loading: false, action: \"\" });\r\n+  const [loader, setLoader] = useState({ loading: false, action: \"loader\" });\r\n \r\n   const { showError, showSuccess } = useToast();\r\n \r\n   const postLogout = async () => {\r\n"
                },
                {
                    "date": 1745297712772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n \r\n axios.defaults.baseURL = environment.apiUrl;\r\n \r\n export const useLogout = () => {\r\n-  const { authToken, logout } = useAuth();\r\n+  const storedToken = Cookies.get('authToken');\r\n   const [getResponse, setGetResponse] = useState<any>(null);\r\n   const [loader, setLoader] = useState({ loading: false, action: \"loader\" });\r\n \r\n   const { showError, showSuccess } = useToast();\r\n@@ -67,74 +67,5 @@\n     postLogout,\r\n     getResponse,\r\n     loader,\r\n   };\r\n-};\n-import { useAuth } from \"@/context/AuthContext\";\r\n-import { useToast } from \"@/context/ToastContext\";\r\n-import { environment } from \"@/environments/environment\";\r\n-import axios from \"axios\";\r\n-import { useState } from \"react\";\r\n-\r\n-axios.defaults.baseURL = environment.apiUrl;\r\n-\r\n-export const useLogout = () => {\r\n-  const { authToken, logout } = useAuth();\r\n-  const [getResponse, setGetResponse] = useState<any>(null);\r\n-  const [loader, setLoader] = useState({ loading: false, action: \"\" });\r\n-\r\n-  const { showError, showSuccess } = useToast();\r\n-\r\n-  const postLogout = async () => {\r\n-    if (!authToken) {\r\n-      showError(\"No hay sesión activa\");\r\n-      return;\r\n-    }\r\n-\r\n-    const method = \"POST\";\r\n-    // URL con el token como parámetro de consulta\r\n-    const url = `/logout?secret_token=${authToken}`;\r\n-\r\n-    setLoader({ loading: true, action: \"logout\" });\r\n-\r\n-    try {\r\n-      interface LogoutResponse {\r\n-        message?: string;\r\n-        success?: boolean;\r\n-      }\r\n-\r\n-      const response = await axios.request<LogoutResponse>({\r\n-        method,\r\n-        url,\r\n-        headers: {\r\n-          'Content-Type': 'application/json',\r\n-          'Authorization': `Bearer ${authToken}`\r\n-        }\r\n-      });\r\n-\r\n-      \r\n-      if (response.status === 200 || response.status === 201 || response.data?.success) {\r\n-        showSuccess(response.data?.message || \"Sesión cerrada correctamente\");\r\n-        setGetResponse(response.data);\r\n-        logout();\r\n-      } else {\r\n-        console.error(\"Invalid response data:\", response.data);\r\n-        showError(\"Error al cerrar sesión\");\r\n-        setGetResponse(response.data);\r\n-      }\r\n-    } catch (error: any) {\r\n-      showError(\r\n-        error.response?.data?.message || \"Ocurrió un error al cerrar sesión\"\r\n-      );\r\n-      console.error(\"Logout error:\", error);\r\n-      return error;\r\n-    } finally {\r\n-      setLoader({ loading: false, action: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  return {\r\n-    postLogout,\r\n-    getResponse,\r\n-    loader,\r\n-  };\r\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1745297746154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,13 +2,13 @@\n import { useToast } from \"@/context/ToastContext\";\r\n import { environment } from \"@/environments/environment\";\r\n import axios from \"axios\";\r\n import { useState } from \"react\";\r\n-\r\n+import Cookies from \"js-cookie\";\r\n axios.defaults.baseURL = environment.apiUrl;\r\n \r\n export const useLogout = () => {\r\n-  const storedToken = Cookies.get('authToken');\r\n+  const { authToken, logout } = useAuth();\r\n   const [getResponse, setGetResponse] = useState<any>(null);\r\n   const [loader, setLoader] = useState({ loading: false, action: \"loader\" });\r\n \r\n   const { showError, showSuccess } = useToast();\r\n"
                },
                {
                    "date": 1745297757943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n import Cookies from \"js-cookie\";\r\n axios.defaults.baseURL = environment.apiUrl;\r\n \r\n export const useLogout = () => {\r\n-  const { authToken, logout } = useAuth();\r\n+  const storedToken = Cookies.get('authToken');\r\n   const [getResponse, setGetResponse] = useState<any>(null);\r\n   const [loader, setLoader] = useState({ loading: false, action: \"loader\" });\r\n \r\n   const { showError, showSuccess } = useToast();\r\n"
                },
                {
                    "date": 1745297763664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,16 +13,16 @@\n \r\n   const { showError, showSuccess } = useToast();\r\n \r\n   const postLogout = async () => {\r\n-    if (!authToken) {\r\n+    if (!storedToken) {\r\n       showError(\"No hay sesión activa\");\r\n       return;\r\n     }\r\n \r\n     const method = \"POST\";\r\n     // URL con el token como parámetro de consulta\r\n-    const url = `/logout?secret_token=${authToken}`;\r\n+    const url = `/logout?secret_token=${storedToken}`;\r\n \r\n     setLoader({ loading: true, action: \"logout\" });\r\n \r\n     try {\r\n"
                },
                {
                    "date": 1745297791679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,17 +35,16 @@\n         method,\r\n         url,\r\n         headers: {\r\n           'Content-Type': 'application/json',\r\n-          'Authorization': `Bearer ${authToken}`\r\n+          'Authorization': `Bearer ${storedToken}`\r\n         }\r\n       });\r\n \r\n       \r\n       if (response.status === 200 || response.status === 201 || response.data?.success) {\r\n         showSuccess(response.data?.message || \"Sesión cerrada correctamente\");\r\n         setGetResponse(response.data);\r\n-        logout();\r\n       } else {\r\n         console.error(\"Invalid response data:\", response.data);\r\n         showError(\"Error al cerrar sesión\");\r\n         setGetResponse(response.data);\r\n"
                },
                {
                    "date": 1745297799574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n       return;\r\n     }\r\n \r\n     const method = \"POST\";\r\n-    // URL con el token como parámetro de consulta\r\n+    \r\n     const url = `/logout?secret_token=${storedToken}`;\r\n \r\n     setLoader({ loading: true, action: \"logout\" });\r\n \r\n"
                },
                {
                    "date": 1745298005704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n       return;\r\n     }\r\n \r\n     const method = \"POST\";\r\n-    \r\n+    // URL con el token como parámetro de consulta\r\n     const url = `/logout?secret_token=${storedToken}`;\r\n \r\n     setLoader({ loading: true, action: \"logout\" });\r\n \r\n@@ -43,8 +43,9 @@\n       \r\n       if (response.status === 200 || response.status === 201 || response.data?.success) {\r\n         showSuccess(response.data?.message || \"Sesión cerrada correctamente\");\r\n         setGetResponse(response.data);\r\n+        logout();\r\n       } else {\r\n         console.error(\"Invalid response data:\", response.data);\r\n         showError(\"Error al cerrar sesión\");\r\n         setGetResponse(response.data);\r\n"
                },
                {
                    "date": 1745298043826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import { environment } from \"@/environments/environment\";\r\n import axios from \"axios\";\r\n import { useState } from \"react\";\r\n import Cookies from \"js-cookie\";\r\n+import\r\n axios.defaults.baseURL = environment.apiUrl;\r\n \r\n export const useLogout = () => {\r\n   const storedToken = Cookies.get('authToken');\r\n"
                },
                {
                    "date": 1745298050895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { environment } from \"@/environments/environment\";\r\n import axios from \"axios\";\r\n import { useState } from \"react\";\r\n import Cookies from \"js-cookie\";\r\n-import\r\n+import {lo}\r\n axios.defaults.baseURL = environment.apiUrl;\r\n \r\n export const useLogout = () => {\r\n   const storedToken = Cookies.get('authToken');\r\n"
                },
                {
                    "date": 1745298066389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { environment } from \"@/environments/environment\";\r\n import axios from \"axios\";\r\n import { useState } from \"react\";\r\n import Cookies from \"js-cookie\";\r\n-import {lo}\r\n+import {logout}\r\n axios.defaults.baseURL = environment.apiUrl;\r\n \r\n export const useLogout = () => {\r\n   const storedToken = Cookies.get('authToken');\r\n"
                },
                {
                    "date": 1745298081818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { environment } from \"@/environments/environment\";\r\n import axios from \"axios\";\r\n import { useState } from \"react\";\r\n import Cookies from \"js-cookie\";\r\n-import {logout}\r\n+import {logout} \r\n axios.defaults.baseURL = environment.apiUrl;\r\n \r\n export const useLogout = () => {\r\n   const storedToken = Cookies.get('authToken');\r\n"
                },
                {
                    "date": 1745298166640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,16 +3,16 @@\n import { environment } from \"@/environments/environment\";\r\n import axios from \"axios\";\r\n import { useState } from \"react\";\r\n import Cookies from \"js-cookie\";\r\n-import {logout} \r\n+import {logout} from \"@/context/AuthContext\";\r\n axios.defaults.baseURL = environment.apiUrl;\r\n \r\n export const useLogout = () => {\r\n   const storedToken = Cookies.get('authToken');\r\n   const [getResponse, setGetResponse] = useState<any>(null);\r\n   const [loader, setLoader] = useState({ loading: false, action: \"loader\" });\r\n-\r\n+  const { logout } = useAuth();\r\n   const { showError, showSuccess } = useToast();\r\n \r\n   const postLogout = async () => {\r\n     if (!storedToken) {\r\n"
                },
                {
                    "date": 1745299146976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { environment } from \"@/environments/environment\";\r\n import axios from \"axios\";\r\n import { useState } from \"react\";\r\n import Cookies from \"js-cookie\";\r\n-import {logout} from \"@/context/AuthContext\";\r\n+\r\n axios.defaults.baseURL = environment.apiUrl;\r\n \r\n export const useLogout = () => {\r\n   const storedToken = Cookies.get('authToken');\r\n@@ -45,8 +45,10 @@\n       if (response.status === 200 || response.status === 201 || response.data?.success) {\r\n         showSuccess(response.data?.message || \"Sesión cerrada correctamente\");\r\n         setGetResponse(response.data);\r\n         logout();\r\n+\r\n+        router.push(\"/logind\");\r\n       } else {\r\n         console.error(\"Invalid response data:\", response.data);\r\n         showError(\"Error al cerrar sesión\");\r\n         setGetResponse(response.data);\r\n"
                },
                {
                    "date": 1745299153205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import { environment } from \"@/environments/environment\";\r\n import axios from \"axios\";\r\n import { useState } from \"react\";\r\n import Cookies from \"js-cookie\";\r\n+import { Router } from \"lucide-react\";\r\n \r\n axios.defaults.baseURL = environment.apiUrl;\r\n \r\n export const useLogout = () => {\r\n@@ -46,9 +47,9 @@\n         showSuccess(response.data?.message || \"Sesión cerrada correctamente\");\r\n         setGetResponse(response.data);\r\n         logout();\r\n \r\n-        router.push(\"/logind\");\r\n+        Router.push(\"/logind\");\r\n       } else {\r\n         console.error(\"Invalid response data:\", response.data);\r\n         showError(\"Error al cerrar sesión\");\r\n         setGetResponse(response.data);\r\n"
                },
                {
                    "date": 1745299158804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n import { environment } from \"@/environments/environment\";\r\n import axios from \"axios\";\r\n import { useState } from \"react\";\r\n import Cookies from \"js-cookie\";\r\n-import { Router } from \"lucide-react\";\r\n \r\n axios.defaults.baseURL = environment.apiUrl;\r\n \r\n export const useLogout = () => {\r\n"
                },
                {
                    "date": 1745299169634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,74 @@\n+import { useAuth } from \"@/context/AuthContext\";\r\n+import { useToast } from \"@/context/ToastContext\";\r\n+import { environment } from \"@/environments/environment\";\r\n+import axios from \"axios\";\r\n+import { useState } from \"react\";\r\n+import Cookies from \"js-cookie\";\r\n+\r\n+axios.defaults.baseURL = environment.apiUrl;\r\n+\r\n+export const useLogout = () => {\r\n+  const storedToken = Cookies.get('authToken');\r\n+  const [getResponse, setGetResponse] = useState<any>(null);\r\n+  const [loader, setLoader] = useState({ loading: false, action: \"loader\" });\r\n+  const { logout } = useAuth();\r\n+  const { showError, showSuccess } = useToast();\r\n+  const router = useRouter(); // Inicializa el router\r\n+  const postLogout = async () => {\r\n+    if (!storedToken) {\r\n+      showError(\"No hay sesión activa\");\r\n+      return;\r\n+    }\r\n+\r\n+    const method = \"POST\";\r\n+    // URL con el token como parámetro de consulta\r\n+    const url = `/logout?secret_token=${storedToken}`;\r\n+\r\n+    setLoader({ loading: true, action: \"logout\" });\r\n+\r\n+    try {\r\n+      interface LogoutResponse {\r\n+        message?: string;\r\n+        success?: boolean;\r\n+      }\r\n+\r\n+      const response = await axios.request<LogoutResponse>({\r\n+        method,\r\n+        url,\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+          'Authorization': `Bearer ${storedToken}`\r\n+        }\r\n+      });\r\n+\r\n+      \r\n+      if (response.status === 200 || response.status === 201 || response.data?.success) {\r\n+        showSuccess(response.data?.message || \"Sesión cerrada correctamente\");\r\n+        setGetResponse(response.data);\r\n+        logout();\r\n+\r\n+        Router.push(\"/logind\");\r\n+      } else {\r\n+        console.error(\"Invalid response data:\", response.data);\r\n+        showError(\"Error al cerrar sesión\");\r\n+        setGetResponse(response.data);\r\n+      }\r\n+\r\n+      \r\n+    } catch (error: any) {\r\n+      showError(\r\n+        error.response?.data?.message || \"Ocurrió un error al cerrar sesión\"\r\n+      );\r\n+      console.error(\"Logout error:\", error);\r\n+      return error;\r\n+    } finally {\r\n+      setLoader({ loading: false, action: \"\" });\r\n+    }\r\n+  };\r\n+\r\n+  return {\r\n+    postLogout,\r\n+    getResponse,\r\n+    loader,\r\n+  };\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1745299177352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { environment } from \"@/environments/environment\";\r\n import axios from \"axios\";\r\n import { useState } from \"react\";\r\n import Cookies from \"js-cookie\";\r\n-\r\n+import { useRouter } from \"next/navigation\"; \r\n axios.defaults.baseURL = environment.apiUrl;\r\n \r\n export const useLogout = () => {\r\n   const storedToken = Cookies.get('authToken');\r\n@@ -70,79 +70,5 @@\n     postLogout,\r\n     getResponse,\r\n     loader,\r\n   };\r\n-};\n-import { useAuth } from \"@/context/AuthContext\";\r\n-import { useToast } from \"@/context/ToastContext\";\r\n-import { environment } from \"@/environments/environment\";\r\n-import axios from \"axios\";\r\n-import { useState } from \"react\";\r\n-import Cookies from \"js-cookie\";\r\n-\r\n-axios.defaults.baseURL = environment.apiUrl;\r\n-\r\n-export const useLogout = () => {\r\n-  const storedToken = Cookies.get('authToken');\r\n-  const [getResponse, setGetResponse] = useState<any>(null);\r\n-  const [loader, setLoader] = useState({ loading: false, action: \"loader\" });\r\n-  const { logout } = useAuth();\r\n-  const { showError, showSuccess } = useToast();\r\n-\r\n-  const postLogout = async () => {\r\n-    if (!storedToken) {\r\n-      showError(\"No hay sesión activa\");\r\n-      return;\r\n-    }\r\n-\r\n-    const method = \"POST\";\r\n-    // URL con el token como parámetro de consulta\r\n-    const url = `/logout?secret_token=${storedToken}`;\r\n-\r\n-    setLoader({ loading: true, action: \"logout\" });\r\n-\r\n-    try {\r\n-      interface LogoutResponse {\r\n-        message?: string;\r\n-        success?: boolean;\r\n-      }\r\n-\r\n-      const response = await axios.request<LogoutResponse>({\r\n-        method,\r\n-        url,\r\n-        headers: {\r\n-          'Content-Type': 'application/json',\r\n-          'Authorization': `Bearer ${storedToken}`\r\n-        }\r\n-      });\r\n-\r\n-      \r\n-      if (response.status === 200 || response.status === 201 || response.data?.success) {\r\n-        showSuccess(response.data?.message || \"Sesión cerrada correctamente\");\r\n-        setGetResponse(response.data);\r\n-        logout();\r\n-\r\n-        Router.push(\"/logind\");\r\n-      } else {\r\n-        console.error(\"Invalid response data:\", response.data);\r\n-        showError(\"Error al cerrar sesión\");\r\n-        setGetResponse(response.data);\r\n-      }\r\n-\r\n-      \r\n-    } catch (error: any) {\r\n-      showError(\r\n-        error.response?.data?.message || \"Ocurrió un error al cerrar sesión\"\r\n-      );\r\n-      console.error(\"Logout error:\", error);\r\n-      return error;\r\n-    } finally {\r\n-      setLoader({ loading: false, action: \"\" });\r\n-    }\r\n-  };\r\n-\r\n-  return {\r\n-    postLogout,\r\n-    getResponse,\r\n-    loader,\r\n-  };\r\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1745299191413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n         showSuccess(response.data?.message || \"Sesión cerrada correctamente\");\r\n         setGetResponse(response.data);\r\n         logout();\r\n \r\n-        Router.push(\"/logind\");\r\n+        router.push(\"/logind\");\r\n       } else {\r\n         console.error(\"Invalid response data:\", response.data);\r\n         showError(\"Error al cerrar sesión\");\r\n         setGetResponse(response.data);\r\n"
                }
            ],
            "date": 1745213927609,
            "name": "Commit-0",
            "content": "import { useAuth } from \"@/context/AuthContext\""
        }
    ]
}