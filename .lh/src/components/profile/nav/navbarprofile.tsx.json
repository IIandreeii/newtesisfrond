{
    "sourceFile": "src/components/profile/nav/navbarprofile.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 33,
            "patches": [
                {
                    "date": 1745458923409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745459437418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,17 +98,8 @@\n           <nav className=\"hidden md:flex items-center space-x-1\">\n             <NavLink href=\"/\" isActive>\n               Inicio\n             </NavLink>\n-            <NavDropdown\n-              title=\"Proyectos\"\n-              items={[\n-                { label: \"Educación\", href: \"/proyectos/educacion\" },\n-                { label: \"Salud\", href: \"/proyectos/salud\" },\n-                { label: \"Medio Ambiente\", href: \"/proyectos/ambiente\" },\n-                { label: \"Comunidades\", href: \"/proyectos/comunidades\" },\n-              ]}\n-            />\n             <NavLink href=\"/donaciones\">Donaciones</NavLink>\n             <NavLink href=\"/sobre-nosotros\">Sobre Nosotros</NavLink>\n             <NavLink href=\"/contacto\">Contacto</NavLink>\n           </nav>\n"
                },
                {
                    "date": 1745459583216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,9 +98,9 @@\n           <nav className=\"hidden md:flex items-center space-x-1\">\n             <NavLink href=\"/\" isActive>\n               Inicio\n             </NavLink>\n-            <NavLink href=\"/donaciones\">Donaciones</NavLink>\n+            <NavLink href=\"/organizaciones\">Donaciones</NavLink>\n             <NavLink href=\"/sobre-nosotros\">Sobre Nosotros</NavLink>\n             <NavLink href=\"/contacto\">Contacto</NavLink>\n           </nav>\n \n"
                },
                {
                    "date": 1745459590568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,9 +98,9 @@\n           <nav className=\"hidden md:flex items-center space-x-1\">\n             <NavLink href=\"/\" isActive>\n               Inicio\n             </NavLink>\n-            <NavLink href=\"/organizaciones\">Donaciones</NavLink>\n+            <NavLink href=\"/organizaciones\">publicaciones</NavLink>\n             <NavLink href=\"/sobre-nosotros\">Sobre Nosotros</NavLink>\n             <NavLink href=\"/contacto\">Contacto</NavLink>\n           </nav>\n \n"
                },
                {
                    "date": 1745459598426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,9 +98,9 @@\n           <nav className=\"hidden md:flex items-center space-x-1\">\n             <NavLink href=\"/\" isActive>\n               Inicio\n             </NavLink>\n-            <NavLink href=\"/organizaciones\">publicaciones</NavLink>\n+            <NavLink href=\"/organizaciones\">Organizaciones</NavLink>\n             <NavLink href=\"/sobre-nosotros\">Sobre Nosotros</NavLink>\n             <NavLink href=\"/contacto\">Contacto</NavLink>\n           </nav>\n \n"
                },
                {
                    "date": 1745459604125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n             <NavLink href=\"/\" isActive>\n               Inicio\n             </NavLink>\n             <NavLink href=\"/organizaciones\">Organizaciones</NavLink>\n-            <NavLink href=\"/sobre-nosotros\">Sobre Nosotros</NavLink>\n+            <NavLink href=\"/Publicaciones\">Sobre Nosotros</NavLink>\n             <NavLink href=\"/contacto\">Contacto</NavLink>\n           </nav>\n \n           {/* Botones de acción */}\n"
                },
                {
                    "date": 1745459610236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n             <NavLink href=\"/\" isActive>\n               Inicio\n             </NavLink>\n             <NavLink href=\"/organizaciones\">Organizaciones</NavLink>\n-            <NavLink href=\"/Publicaciones\">Sobre Nosotros</NavLink>\n+            <NavLink href=\"/Publicaciones\">Publicaciones</NavLink>\n             <NavLink href=\"/contacto\">Contacto</NavLink>\n           </nav>\n \n           {/* Botones de acción */}\n"
                },
                {
                    "date": 1745459663175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n               Inicio\n             </NavLink>\n             <NavLink href=\"/organizaciones\">Organizaciones</NavLink>\n             <NavLink href=\"/Publicaciones\">Publicaciones</NavLink>\n-            <NavLink href=\"/contacto\">Contacto</NavLink>\n+            <NavLink href=\"/contacto\">Chat</NavLink>\n           </nav>\n \n           {/* Botones de acción */}\n           <div className=\"hidden md:flex items-center space-x-3\">\n"
                },
                {
                    "date": 1745459673090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n               Inicio\n             </NavLink>\n             <NavLink href=\"/organizaciones\">Organizaciones</NavLink>\n             <NavLink href=\"/Publicaciones\">Publicaciones</NavLink>\n-            <NavLink href=\"/contacto\">Chat</NavLink>\n+            <NavLink href=\"/Chat\">Chat-Mensajes</NavLink>\n           </nav>\n \n           {/* Botones de acción */}\n           <div className=\"hidden md:flex items-center space-x-3\">\n"
                },
                {
                    "date": 1745459727708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,12 +102,10 @@\n             <NavLink href=\"/organizaciones\">Organizaciones</NavLink>\n             <NavLink href=\"/Publicaciones\">Publicaciones</NavLink>\n             <NavLink href=\"/Chat\">Chat-Mensajes</NavLink>\n           </nav>\n-\n           {/* Botones de acción */}\n           <div className=\"hidden md:flex items-center space-x-3\">\n-       \n               <Button variant=\"ghost\" className=\"text-slate-600 hover:text-slate-900 hover:bg-slate-100\">\n                 <Link href=\"/profile\">\n                   Perfil\n                 </Link>\n"
                },
                {
                    "date": 1745459736394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,6 @@\n \"use client\"\n-\n import type React from \"react\"\n-\n import { useState, useEffect, useCallback } from \"react\"\n import { Heart, Menu, X, ChevronDown } from \"lucide-react\"\n import { Button } from \"@/components/ui/button\"\n import { Badge } from \"@/components/ui/badge\"\n@@ -92,9 +90,8 @@\n                 Plataforma de Donaciones\n               </Badge>\n             </div>\n           </Link>\n-\n           {/* Navegación de escritorio */}\n           <nav className=\"hidden md:flex items-center space-x-1\">\n             <NavLink href=\"/\" isActive>\n               Inicio\n"
                },
                {
                    "date": 1745463389006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n export default function Navbarprofile() {\n   const [isScrolled, setIsScrolled] = useState(false)\n   const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n   const [animateHeart, setAnimateHeart] = useState(false)\n-  const [isAuthenticated, setIsAuthenticated] = useState(false)\n+  const [setIsAuthenticated] = useState(false)\n   const { postLogout, loader } = useLogout();\n \n \n   const checkAuth = useCallback(() => {\n"
                },
                {
                    "date": 1745463400540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n export default function Navbarprofile() {\n   const [isScrolled, setIsScrolled] = useState(false)\n   const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n   const [animateHeart, setAnimateHeart] = useState(false)\n-  const [setIsAuthenticated] = useState(false)\n+  const [_isAuthenticated, setIsAuthenticated] = useState(false)\n   const { postLogout, loader } = useLogout();\n \n \n   const checkAuth = useCallback(() => {\n"
                },
                {
                    "date": 1745463410412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -208,43 +208,4 @@\n     </Link>\n   )\n }\n \n-// Componente para dropdown en la navegación\n-function NavDropdown({\n-  title,\n-  items,\n-}: {\n-  title: string\n-  items: { label: string; href: string }[]\n-}) {\n-  const [isOpen, setIsOpen] = useState(false)\n-\n-  return (\n-    <div className=\"relative group\" onMouseLeave={() => setIsOpen(false)}>\n-      <button\n-        className=\"px-3 py-2 rounded-md text-sm font-medium text-slate-600 hover:text-slate-900 hover:bg-slate-50 flex items-center gap-1 focus:outline-none\"\n-        onClick={() => setIsOpen(!isOpen)}\n-        onMouseEnter={() => setIsOpen(true)}\n-      >\n-        {title}\n-        <ChevronDown className=\"h-4 w-4 transition-transform duration-200\" />\n-      </button>\n-\n-      {isOpen && (\n-        <div className=\"absolute left-0 mt-1 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-10 animate-in fade-in-50 slide-in-from-top-5 duration-200\">\n-          <div className=\"py-1\">\n-            {items.map((item, index) => (\n-              <Link\n-                key={index}\n-                href={item.href}\n-                className=\"block px-4 py-2 text-sm text-slate-700 hover:bg-slate-50 hover:text-sky-600 transition-colors\"\n-              >\n-                {item.label}\n-              </Link>\n-            ))}\n-          </div>\n-        </div>\n-      )}\n-    </div>\n-  )\n-}\n"
                },
                {
                    "date": 1745463711814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n export default function Navbarprofile() {\n   const [isScrolled, setIsScrolled] = useState(false)\n   const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n   const [animateHeart, setAnimateHeart] = useState(false)\n-  const [_isAuthenticated, setIsAuthenticated] = useState(false)\n+  const [isAuthenticated, setIsAuthenticated] = useState(false)\n   const { postLogout, loader } = useLogout();\n \n \n   const checkAuth = useCallback(() => {\n"
                },
                {
                    "date": 1745463720120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n export default function Navbarprofile() {\n   const [isScrolled, setIsScrolled] = useState(false)\n   const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n   const [animateHeart, setAnimateHeart] = useState(false)\n-  const [isAuthenticated, setIsAuthenticated] = useState(false)\n+  const [_isAuthenticated, setIsAuthenticated] = useState(false)\n   const { postLogout, loader } = useLogout();\n \n \n   const checkAuth = useCallback(() => {\n"
                },
                {
                    "date": 1745463731667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n \"use client\"\n import type React from \"react\"\n import { useState, useEffect, useCallback } from \"react\"\n-import { Heart, Menu, X, ChevronDown } from \"lucide-react\"\n+import { Heart, Menu, X} from \"lucide-react\"\n import { Button } from \"@/components/ui/button\"\n import { Badge } from \"@/components/ui/badge\"\n import Link from \"next/link\"\n import { useLogout } from \"./logout\"\n"
                },
                {
                    "date": 1745463811719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,10 @@\n export default function Navbarprofile() {\n   const [isScrolled, setIsScrolled] = useState(false)\n   const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n   const [animateHeart, setAnimateHeart] = useState(false)\n-  const [_isAuthenticated, setIsAuthenticated] = useState(false)\n+  // Eliminamos la variable no utilizada o la usamos\n+  const [isAuthenticated, setIsAuthenticated] = useState(false)\n   const { postLogout, loader } = useLogout();\n \n \n   const checkAuth = useCallback(() => {\n"
                },
                {
                    "date": 1745463817643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   const [isScrolled, setIsScrolled] = useState(false)\n   const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n   const [animateHeart, setAnimateHeart] = useState(false)\n   // Eliminamos la variable no utilizada o la usamos\n-  const [isAuthenticated, setIsAuthenticated] = useState(false)\n+  const [ setIsAuthenticated] = useState(false)\n   const { postLogout, loader } = useLogout();\n \n \n   const checkAuth = useCallback(() => {\n"
                },
                {
                    "date": 1745463909989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,10 +11,10 @@\n export default function Navbarprofile() {\n   const [isScrolled, setIsScrolled] = useState(false)\n   const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n   const [animateHeart, setAnimateHeart] = useState(false)\n-  // Eliminamos la variable no utilizada o la usamos\n-  const [ setIsAuthenticated] = useState(false)\n+  // Estado para manejar la autenticación\n+  const [isAuthenticated, setIsAuthenticated] = useState(false)\n   const { postLogout, loader } = useLogout();\n \n \n   const checkAuth = useCallback(() => {\n"
                },
                {
                    "date": 1745463919937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n \n   const checkAuth = useCallback(() => {\n     const token = Cookies.get('authToken');\n-    setIsAuthenticated(!!token);\n+    IsAuthenticated(!!token);\n   }, []);\n \n   // Función mejorada de logout\n   const handleLogout = useCallback(async () => {\n"
                },
                {
                    "date": 1745463929680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n \n   const checkAuth = useCallback(() => {\n     const token = Cookies.get('authToken');\n-    IsAuthenticated(!!token);\n+    setisAuthenticated(!!token);\n   }, []);\n \n   // Función mejorada de logout\n   const handleLogout = useCallback(async () => {\n"
                },
                {
                    "date": 1745463935918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n \n   const checkAuth = useCallback(() => {\n     const token = Cookies.get('authToken');\n-    setisAuthenticated(!!token);\n+    setIsAuthenticated(!!token);\n   }, []);\n \n   // Función mejorada de logout\n   const handleLogout = useCallback(async () => {\n"
                },
                {
                    "date": 1745464007847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,12 +16,8 @@\n   const [isAuthenticated, setIsAuthenticated] = useState(false)\n   const { postLogout, loader } = useLogout();\n \n \n-  const checkAuth = useCallback(() => {\n-    const token = Cookies.get('authToken');\n-    setIsAuthenticated(!!token);\n-  }, []);\n \n   // Función mejorada de logout\n   const handleLogout = useCallback(async () => {\n     await postLogout();\n"
                },
                {
                    "date": 1745464018904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,26 +18,10 @@\n \n \n \n   // Función mejorada de logout\n-  const handleLogout = useCallback(async () => {\n-    await postLogout();\n-    checkAuth(); // Verificar autenticación inmediatamente después del logout\n-  }, [postLogout, checkAuth]);\n \n-  // Verificar estado de autenticación y configurar un listener para cambios en cookies\n-  useEffect(() => {\n-    // Verificar inicialmente\n-    checkAuth();\n \n-    // Configurar un intervalo para verificar cambios en cookies\n-    const interval = setInterval(checkAuth, 1000);\n-\n-    return () => {\n-      clearInterval(interval);\n-    };\n-  }, [checkAuth]);\n-\n   // Efecto para controlar el scroll\n   useEffect(() => {\n     const handleScroll = () => {\n       if (window.scrollY > 10) {\n"
                },
                {
                    "date": 1745464028679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,10 +18,26 @@\n \n \n \n   // Función mejorada de logout\n+  const handleLogout = useCallback(async () => {\n+    await postLogout();\n+    checkAuth(); // Verificar autenticación inmediatamente después del logout\n+  }, [postLogout, checkAuth]);\n \n+  // Verificar estado de autenticación y configurar un listener para cambios en cookies\n+  useEffect(() => {\n+    // Verificar inicialmente\n+    checkAuth();\n \n+    // Configurar un intervalo para verificar cambios en cookies\n+    const interval = setInterval(checkAuth, 1000);\n+\n+    return () => {\n+      clearInterval(interval);\n+    };\n+  }, [checkAuth]);\n+\n   // Efecto para controlar el scroll\n   useEffect(() => {\n     const handleScroll = () => {\n       if (window.scrollY > 10) {\n"
                },
                {
                    "date": 1745464104990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,14 +16,11 @@\n   const [isAuthenticated, setIsAuthenticated] = useState(false)\n   const { postLogout, loader } = useLogout();\n \n \n-\n-  // Función mejorada de logout\n   const handleLogout = useCallback(async () => {\n     await postLogout();\n-    checkAuth(); // Verificar autenticación inmediatamente después del logout\n-  }, [postLogout, checkAuth]);\n+  }, [postLogout]);\n \n   // Verificar estado de autenticación y configurar un listener para cambios en cookies\n   useEffect(() => {\n     // Verificar inicialmente\n"
                },
                {
                    "date": 1745464111039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,21 +20,9 @@\n   const handleLogout = useCallback(async () => {\n     await postLogout();\n   }, [postLogout]);\n \n-  // Verificar estado de autenticación y configurar un listener para cambios en cookies\n-  useEffect(() => {\n-    // Verificar inicialmente\n-    checkAuth();\n \n-    // Configurar un intervalo para verificar cambios en cookies\n-    const interval = setInterval(checkAuth, 1000);\n-\n-    return () => {\n-      clearInterval(interval);\n-    };\n-  }, [checkAuth]);\n-\n   // Efecto para controlar el scroll\n   useEffect(() => {\n     const handleScroll = () => {\n       if (window.scrollY > 10) {\n"
                },
                {
                    "date": 1745466427774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,16 +5,15 @@\n import { Button } from \"@/components/ui/button\"\n import { Badge } from \"@/components/ui/badge\"\n import Link from \"next/link\"\n import { useLogout } from \"./logout\"\n-import Cookies from 'js-cookie';\n \n+\n export default function Navbarprofile() {\n   const [isScrolled, setIsScrolled] = useState(false)\n   const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n   const [animateHeart, setAnimateHeart] = useState(false)\n   // Estado para manejar la autenticación\n-  const [isAuthenticated, setIsAuthenticated] = useState(false)\n   const { postLogout, loader } = useLogout();\n \n \n   const handleLogout = useCallback(async () => {\n"
                },
                {
                    "date": 1745468870164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,23 +5,42 @@\n import { Button } from \"@/components/ui/button\"\n import { Badge } from \"@/components/ui/badge\"\n import Link from \"next/link\"\n import { useLogout } from \"./logout\"\n+import Cookies from 'js-cookie';\n \n-\n export default function Navbarprofile() {\n   const [isScrolled, setIsScrolled] = useState(false)\n   const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n   const [animateHeart, setAnimateHeart] = useState(false)\n-  // Estado para manejar la autenticación\n+  const [_isAuthenticated, setIsAuthenticated] = useState(false)\n   const { postLogout, loader } = useLogout();\n \n \n+  const checkAuth = useCallback(() => {\n+    const token = Cookies.get('authToken');\n+    setIsAuthenticated(!!token);\n+  }, []);\n+\n+  // Función mejorada de logout\n   const handleLogout = useCallback(async () => {\n     await postLogout();\n-  }, [postLogout]);\n+    checkAuth(); // Verificar autenticación inmediatamente después del logout\n+  }, [postLogout, checkAuth]);\n \n+  // Verificar estado de autenticación y configurar un listener para cambios en cookies\n+  useEffect(() => {\n+    // Verificar inicialmente\n+    checkAuth();\n \n+    // Configurar un intervalo para verificar cambios en cookies\n+    const interval = setInterval(checkAuth, 1000);\n+\n+    return () => {\n+      clearInterval(interval);\n+    };\n+  }, [checkAuth]);\n+\n   // Efecto para controlar el scroll\n   useEffect(() => {\n     const handleScroll = () => {\n       if (window.scrollY > 10) {\n"
                },
                {
                    "date": 1745468884121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,42 +5,23 @@\n import { Button } from \"@/components/ui/button\"\n import { Badge } from \"@/components/ui/badge\"\n import Link from \"next/link\"\n import { useLogout } from \"./logout\"\n-import Cookies from 'js-cookie';\n \n+\n export default function Navbarprofile() {\n   const [isScrolled, setIsScrolled] = useState(false)\n   const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n   const [animateHeart, setAnimateHeart] = useState(false)\n-  const [_isAuthenticated, setIsAuthenticated] = useState(false)\n+  // Estado para manejar la autenticación\n   const { postLogout, loader } = useLogout();\n \n \n-  const checkAuth = useCallback(() => {\n-    const token = Cookies.get('authToken');\n-    setIsAuthenticated(!!token);\n-  }, []);\n-\n-  // Función mejorada de logout\n   const handleLogout = useCallback(async () => {\n     await postLogout();\n-    checkAuth(); // Verificar autenticación inmediatamente después del logout\n-  }, [postLogout, checkAuth]);\n+  }, [postLogout]);\n \n-  // Verificar estado de autenticación y configurar un listener para cambios en cookies\n-  useEffect(() => {\n-    // Verificar inicialmente\n-    checkAuth();\n \n-    // Configurar un intervalo para verificar cambios en cookies\n-    const interval = setInterval(checkAuth, 1000);\n-\n-    return () => {\n-      clearInterval(interval);\n-    };\n-  }, [checkAuth]);\n-\n   // Efecto para controlar el scroll\n   useEffect(() => {\n     const handleScroll = () => {\n       if (window.scrollY > 10) {\n"
                },
                {
                    "date": 1745469628916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,23 +5,43 @@\n import { Button } from \"@/components/ui/button\"\n import { Badge } from \"@/components/ui/badge\"\n import Link from \"next/link\"\n import { useLogout } from \"./logout\"\n+import Cookies from 'js-cookie';\n \n-\n export default function Navbarprofile() {\n   const [isScrolled, setIsScrolled] = useState(false)\n   const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n   const [animateHeart, setAnimateHeart] = useState(false)\n-  // Estado para manejar la autenticación\n+  // Eliminamos la variable no utilizada o la usamos\n+  const [setIsAuthenticated] = useState(false)\n   const { postLogout, loader } = useLogout();\n \n \n+  const checkAuth = useCallback(() => {\n+    const token = Cookies.get('authToken');\n+    setIsAuthenticated(!!token);\n+  }, []);\n+\n+  // Función mejorada de logout\n   const handleLogout = useCallback(async () => {\n     await postLogout();\n-  }, [postLogout]);\n+    checkAuth(); // Verificar autenticación inmediatamente después del logout\n+  }, [postLogout, checkAuth]);\n \n+  // Verificar estado de autenticación y configurar un listener para cambios en cookies\n+  useEffect(() => {\n+    // Verificar inicialmente\n+    checkAuth();\n \n+    // Configurar un intervalo para verificar cambios en cookies\n+    const interval = setInterval(checkAuth, 1000);\n+\n+    return () => {\n+      clearInterval(interval);\n+    };\n+  }, [checkAuth]);\n+\n   // Efecto para controlar el scroll\n   useEffect(() => {\n     const handleScroll = () => {\n       if (window.scrollY > 10) {\n"
                },
                {
                    "date": 1745469669212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n \"use client\"\n import type React from \"react\"\n import { useState, useEffect, useCallback } from \"react\"\n-import { Heart, Menu, X} from \"lucide-react\"\n+import { Heart, Menu, X, ChevronDown } from \"lucide-react\"\n import { Button } from \"@/components/ui/button\"\n import { Badge } from \"@/components/ui/badge\"\n import Link from \"next/link\"\n import { useLogout } from \"./logout\"\n@@ -11,10 +11,9 @@\n export default function Navbarprofile() {\n   const [isScrolled, setIsScrolled] = useState(false)\n   const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n   const [animateHeart, setAnimateHeart] = useState(false)\n-  // Eliminamos la variable no utilizada o la usamos\n-  const [setIsAuthenticated] = useState(false)\n+  const [isAuthenticated, setIsAuthenticated] = useState(false)\n   const { postLogout, loader } = useLogout();\n \n \n   const checkAuth = useCallback(() => {\n@@ -209,4 +208,43 @@\n     </Link>\n   )\n }\n \n+// Componente para dropdown en la navegación\n+function NavDropdown({\n+  title,\n+  items,\n+}: {\n+  title: string\n+  items: { label: string; href: string }[]\n+}) {\n+  const [isOpen, setIsOpen] = useState(false)\n+\n+  return (\n+    <div className=\"relative group\" onMouseLeave={() => setIsOpen(false)}>\n+      <button\n+        className=\"px-3 py-2 rounded-md text-sm font-medium text-slate-600 hover:text-slate-900 hover:bg-slate-50 flex items-center gap-1 focus:outline-none\"\n+        onClick={() => setIsOpen(!isOpen)}\n+        onMouseEnter={() => setIsOpen(true)}\n+      >\n+        {title}\n+        <ChevronDown className=\"h-4 w-4 transition-transform duration-200\" />\n+      </button>\n+\n+      {isOpen && (\n+        <div className=\"absolute left-0 mt-1 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-10 animate-in fade-in-50 slide-in-from-top-5 duration-200\">\n+          <div className=\"py-1\">\n+            {items.map((item, index) => (\n+              <Link\n+                key={index}\n+                href={item.href}\n+                className=\"block px-4 py-2 text-sm text-slate-700 hover:bg-slate-50 hover:text-sky-600 transition-colors\"\n+              >\n+                {item.label}\n+              </Link>\n+            ))}\n+          </div>\n+        </div>\n+      )}\n+    </div>\n+  )\n+}\n"
                },
                {
                    "date": 1745469891462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,46 +1,27 @@\n \"use client\"\n import type React from \"react\"\n import { useState, useEffect, useCallback } from \"react\"\n-import { Heart, Menu, X, ChevronDown } from \"lucide-react\"\n+import { Heart, Menu, X} from \"lucide-react\"\n import { Button } from \"@/components/ui/button\"\n import { Badge } from \"@/components/ui/badge\"\n import Link from \"next/link\"\n import { useLogout } from \"./logout\"\n-import Cookies from 'js-cookie';\n \n+\n export default function Navbarprofile() {\n   const [isScrolled, setIsScrolled] = useState(false)\n   const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n   const [animateHeart, setAnimateHeart] = useState(false)\n-  const [isAuthenticated, setIsAuthenticated] = useState(false)\n+  // Estado para manejar la autenticación\n   const { postLogout, loader } = useLogout();\n \n \n-  const checkAuth = useCallback(() => {\n-    const token = Cookies.get('authToken');\n-    setIsAuthenticated(!!token);\n-  }, []);\n-\n-  // Función mejorada de logout\n   const handleLogout = useCallback(async () => {\n     await postLogout();\n-    checkAuth(); // Verificar autenticación inmediatamente después del logout\n-  }, [postLogout, checkAuth]);\n+  }, [postLogout]);\n \n-  // Verificar estado de autenticación y configurar un listener para cambios en cookies\n-  useEffect(() => {\n-    // Verificar inicialmente\n-    checkAuth();\n \n-    // Configurar un intervalo para verificar cambios en cookies\n-    const interval = setInterval(checkAuth, 1000);\n-\n-    return () => {\n-      clearInterval(interval);\n-    };\n-  }, [checkAuth]);\n-\n   // Efecto para controlar el scroll\n   useEffect(() => {\n     const handleScroll = () => {\n       if (window.scrollY > 10) {\n@@ -208,43 +189,4 @@\n     </Link>\n   )\n }\n \n-// Componente para dropdown en la navegación\n-function NavDropdown({\n-  title,\n-  items,\n-}: {\n-  title: string\n-  items: { label: string; href: string }[]\n-}) {\n-  const [isOpen, setIsOpen] = useState(false)\n-\n-  return (\n-    <div className=\"relative group\" onMouseLeave={() => setIsOpen(false)}>\n-      <button\n-        className=\"px-3 py-2 rounded-md text-sm font-medium text-slate-600 hover:text-slate-900 hover:bg-slate-50 flex items-center gap-1 focus:outline-none\"\n-        onClick={() => setIsOpen(!isOpen)}\n-        onMouseEnter={() => setIsOpen(true)}\n-      >\n-        {title}\n-        <ChevronDown className=\"h-4 w-4 transition-transform duration-200\" />\n-      </button>\n-\n-      {isOpen && (\n-        <div className=\"absolute left-0 mt-1 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-10 animate-in fade-in-50 slide-in-from-top-5 duration-200\">\n-          <div className=\"py-1\">\n-            {items.map((item, index) => (\n-              <Link\n-                key={index}\n-                href={item.href}\n-                className=\"block px-4 py-2 text-sm text-slate-700 hover:bg-slate-50 hover:text-sky-600 transition-colors\"\n-              >\n-                {item.label}\n-              </Link>\n-            ))}\n-          </div>\n-        </div>\n-      )}\n-    </div>\n-  )\n-}\n"
                }
            ],
            "date": 1745458923409,
            "name": "Commit-0",
            "content": "\"use client\"\n\nimport type React from \"react\"\n\nimport { useState, useEffect, useCallback } from \"react\"\nimport { Heart, Menu, X, ChevronDown } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\nimport Link from \"next/link\"\nimport { useLogout } from \"./logout\"\nimport Cookies from 'js-cookie';\n\nexport default function Navbarprofile() {\n  const [isScrolled, setIsScrolled] = useState(false)\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n  const [animateHeart, setAnimateHeart] = useState(false)\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const { postLogout, loader } = useLogout();\n\n\n  const checkAuth = useCallback(() => {\n    const token = Cookies.get('authToken');\n    setIsAuthenticated(!!token);\n  }, []);\n\n  // Función mejorada de logout\n  const handleLogout = useCallback(async () => {\n    await postLogout();\n    checkAuth(); // Verificar autenticación inmediatamente después del logout\n  }, [postLogout, checkAuth]);\n\n  // Verificar estado de autenticación y configurar un listener para cambios en cookies\n  useEffect(() => {\n    // Verificar inicialmente\n    checkAuth();\n\n    // Configurar un intervalo para verificar cambios en cookies\n    const interval = setInterval(checkAuth, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [checkAuth]);\n\n  // Efecto para controlar el scroll\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.scrollY > 10) {\n        setIsScrolled(true)\n      } else {\n        setIsScrolled(false)\n      }\n    }\n\n    window.addEventListener(\"scroll\", handleScroll)\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll)\n    }\n  }, [])\n\n  // Efecto para animar el corazón periódicamente\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setAnimateHeart(true)\n      setTimeout(() => setAnimateHeart(false), 1000)\n    }, 5000)\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <header\n      className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${isScrolled ? \"bg-white/80 backdrop-blur-md shadow-sm py-2\" : \"bg-transparent py-4\"\n        }`}\n    >\n      <div className=\"container mx-auto max-w-6xl px-4\">\n        <div className=\"flex items-center justify-between\">\n          {/* Logo */}\n          <Link href=\"/\" className=\"flex items-center gap-3 group\">\n            <div className=\"relative\">\n              <Heart\n                className={`h-8 w-8 text-sky-400 fill-sky-400 transition-all duration-500 group-hover:scale-110 ${animateHeart ? \"scale-125\" : \"\"\n                  }`}\n              />\n              <Heart\n                className={`h-5 w-5 text-pink-300 fill-pink-300 absolute -top-2 -right-2 transition-all duration-500 group-hover:rotate-12 ${animateHeart ? \"scale-150 rotate-12\" : \"\"\n                  }`}\n              />\n            </div>\n            <div>\n              <h1 className=\"text-2xl font-bold text-slate-800\">DonaVida</h1>\n              <Badge variant=\"outline\" className=\"bg-green-50 text-green-600 border-green-200 text-xs\">\n                Plataforma de Donaciones\n              </Badge>\n            </div>\n          </Link>\n\n          {/* Navegación de escritorio */}\n          <nav className=\"hidden md:flex items-center space-x-1\">\n            <NavLink href=\"/\" isActive>\n              Inicio\n            </NavLink>\n            <NavDropdown\n              title=\"Proyectos\"\n              items={[\n                { label: \"Educación\", href: \"/proyectos/educacion\" },\n                { label: \"Salud\", href: \"/proyectos/salud\" },\n                { label: \"Medio Ambiente\", href: \"/proyectos/ambiente\" },\n                { label: \"Comunidades\", href: \"/proyectos/comunidades\" },\n              ]}\n            />\n            <NavLink href=\"/donaciones\">Donaciones</NavLink>\n            <NavLink href=\"/sobre-nosotros\">Sobre Nosotros</NavLink>\n            <NavLink href=\"/contacto\">Contacto</NavLink>\n          </nav>\n\n          {/* Botones de acción */}\n          <div className=\"hidden md:flex items-center space-x-3\">\n       \n              <Button variant=\"ghost\" className=\"text-slate-600 hover:text-slate-900 hover:bg-slate-100\">\n                <Link href=\"/profile\">\n                  Perfil\n                </Link>\n              </Button>\n              <Button\n                className=\"bg-red-500 hover:bg-red-600 text-white transition-all duration-300 hover:scale-105 active:scale-95\"\n                onClick={handleLogout}\n                disabled={loader.loading && loader.action === \"logout\"}\n              >\n                {loader.loading && loader.action === \"logout\" ? 'Cerrando...' : 'Cerrar Sesión'}\n              </Button>\n          </div>\n\n          {/* Botón de menú móvil */}\n          <button\n            className=\"md:hidden text-slate-700 hover:text-slate-900 focus:outline-none\"\n            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n          >\n            {isMobileMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n          </button>\n        </div>\n\n        {/* Menú móvil */}\n        {isMobileMenuOpen && (\n          <div className=\"md:hidden mt-4 py-4 bg-white/95 backdrop-blur-md rounded-lg shadow-lg animate-in slide-in-from-top duration-300\">\n            <nav className=\"flex flex-col space-y-3 px-4\">\n              <MobileNavLink href=\"/\" isActive>\n                Inicio\n              </MobileNavLink>\n              <MobileNavLink href=\"/proyectos\">Proyectos</MobileNavLink>\n              <MobileNavLink href=\"/donaciones\">Donaciones</MobileNavLink>\n              <MobileNavLink href=\"/sobre-nosotros\">Sobre Nosotros</MobileNavLink>\n              <MobileNavLink href=\"/contacto\">Contacto</MobileNavLink>\n              <div className=\"pt-3 border-t border-slate-200 flex flex-col space-y-2\">\n\n                  <Button variant=\"ghost\" className=\"text-slate-600 hover:text-slate-900 hover:bg-slate-100\">\n                    <Link href=\"/profile\">\n                      Perfil\n                    </Link>\n                  </Button>\n\n\n                  <Button\n                    className=\"bg-red-500 hover:bg-red-600 text-white transition-all duration-300 hover:scale-105 active:scale-95\"\n                    onClick={handleLogout}\n                    disabled={loader.loading && loader.action === \"logout\"}\n                  >\n                    {loader.loading && loader.action === \"logout\" ? 'Cerrando...' : 'Cerrar Sesión'}\n                  </Button>\n\n              </div>\n            </nav>\n          </div>\n        )}\n      </div>\n    </header>\n  )\n}\n\nfunction NavLink({\n  href,\n  children,\n  isActive = false,\n}: {\n  href: string\n  children: React.ReactNode\n  isActive?: boolean\n}) {\n  return (\n    <Link\n      href={href}\n      className={`px-3 py-2 rounded-md text-sm font-medium transition-colors relative group ${isActive ? \"text-sky-600\" : \"text-slate-600 hover:text-slate-900 hover:bg-slate-50\"\n        }`}\n    >\n      {children}\n      {isActive && (\n        <span className=\"absolute bottom-0 left-0 w-full h-0.5 bg-sky-400 rounded-full transform origin-left\"></span>\n      )}\n      {!isActive && (\n        <span className=\"absolute bottom-0 left-0 w-0 h-0.5 bg-sky-400 rounded-full transform origin-left transition-all duration-300 group-hover:w-full\"></span>\n      )}\n    </Link>\n  )\n}\n\n// Componente para enlaces de navegación móvil\nfunction MobileNavLink({\n  href,\n  children,\n  isActive = false,\n}: {\n  href: string\n  children: React.ReactNode\n  isActive?: boolean\n}) {\n  return (\n    <Link\n      href={href}\n      className={`px-3 py-2 rounded-md text-sm font-medium ${isActive ? \"text-sky-600 bg-sky-50\" : \"text-slate-600 hover:text-slate-900 hover:bg-slate-50\"\n        }`}\n    >\n      {children}\n    </Link>\n  )\n}\n\n// Componente para dropdown en la navegación\nfunction NavDropdown({\n  title,\n  items,\n}: {\n  title: string\n  items: { label: string; href: string }[]\n}) {\n  const [isOpen, setIsOpen] = useState(false)\n\n  return (\n    <div className=\"relative group\" onMouseLeave={() => setIsOpen(false)}>\n      <button\n        className=\"px-3 py-2 rounded-md text-sm font-medium text-slate-600 hover:text-slate-900 hover:bg-slate-50 flex items-center gap-1 focus:outline-none\"\n        onClick={() => setIsOpen(!isOpen)}\n        onMouseEnter={() => setIsOpen(true)}\n      >\n        {title}\n        <ChevronDown className=\"h-4 w-4 transition-transform duration-200\" />\n      </button>\n\n      {isOpen && (\n        <div className=\"absolute left-0 mt-1 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-10 animate-in fade-in-50 slide-in-from-top-5 duration-200\">\n          <div className=\"py-1\">\n            {items.map((item, index) => (\n              <Link\n                key={index}\n                href={item.href}\n                className=\"block px-4 py-2 text-sm text-slate-700 hover:bg-slate-50 hover:text-sky-600 transition-colors\"\n              >\n                {item.label}\n              </Link>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n"
        }
    ]
}