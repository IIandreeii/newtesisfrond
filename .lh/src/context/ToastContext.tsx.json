{
    "sourceFile": "src/context/ToastContext.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1745190561821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745190568507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,7 @@\n \r\n \r\n \r\n-interface \n\\ No newline at end of file\n+interface ToastContextType {\r\n+\r\n+    \r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1745190573861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,6 +2,6 @@\n \r\n \r\n interface ToastContextType {\r\n \r\n-    \r\n+    showErrot\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1745190580113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n \r\n \r\n \r\n interface ToastContextType {\r\n-\r\n-    showErrot\r\n+    showErrotr: (message: string) => void;\r\n+    showSuccess: (message: string) => void;\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1745190586681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,5 +3,9 @@\n \r\n interface ToastContextType {\r\n     showErrotr: (message: string) => void;\r\n     showSuccess: (message: string) => void;\r\n-}\n\\ No newline at end of file\n+}\r\n+\r\n+\r\n+\r\n+const ToastContextType\n\\ No newline at end of file\n"
                },
                {
                    "date": 1745190599406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,51 @@\n+import React, { createContext, useContext, useRef, ReactNode } from 'react';\r\n+import { Toast } from 'primereact/toast';\r\n+import { ToastMessage } from 'primereact/toast';\r\n \r\n-\r\n-\r\n interface ToastContextType {\r\n-    showErrotr: (message: string) => void;\r\n+    showError: (message: string) => void;\r\n     showSuccess: (message: string) => void;\r\n }\r\n\\ No newline at end of file\n \r\n+const ToastContext = createContext<ToastContextType | undefined>(undefined);\r\n \r\n+export const useToast = (): ToastContextType => {\r\n+    const context = useContext(ToastContext);\r\n+    if (!context) {\r\n+        throw new Error('useToast must be used within a ToastProvider');\r\n+    }\r\n+    return context;\r\n+};\r\n \r\n-const ToastContextType\n+interface ToastProviderProps {\r\n+    children: ReactNode;\r\n+}\r\n+\r\n+export const ToastProvider: React.FC<ToastProviderProps> = ({ children }) => {\r\n+    const toast = useRef<Toast>(null);\r\n+\r\n+    const showError = (message: string) => {\r\n+        toast.current?.show({\r\n+            severity: 'error',\r\n+            summary: 'Error',\r\n+            detail: message,\r\n+            life: 3000,\r\n+        } as ToastMessage);\r\n+    };\r\n+\r\n+    const showSuccess = (message: string) => {\r\n+        toast.current?.show({\r\n+            severity: 'success',\r\n+            summary: 'Success',\r\n+            detail: message,\r\n+            life: 3000,\r\n+        } as ToastMessage);\r\n+    };\r\n+\r\n+    return (\r\n+        <ToastContext.Provider value={{ showError, showSuccess }}>\r\n+            <Toast ref={toast} />\r\n+            {children}\r\n+        </ToastContext.Provider>\r\n+    );\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1745203939876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+\r\n import React, { createContext, useContext, useRef, ReactNode } from 'react';\r\n import { Toast } from 'primereact/toast';\r\n import { ToastMessage } from 'primereact/toast';\r\n \r\n"
                },
                {
                    "date": 1745204344269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,11 @@\n-\r\n+\"use client\";\r\n import React, { createContext, useContext, useRef, ReactNode } from 'react';\r\n import { Toast } from 'primereact/toast';\r\n import { ToastMessage } from 'primereact/toast';\r\n \r\n interface ToastContextType {\r\n+    current: any;\r\n     showError: (message: string) => void;\r\n     showSuccess: (message: string) => void;\r\n }\r\n \r\n"
                },
                {
                    "date": 1745204366624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n import { Toast } from 'primereact/toast';\r\n import { ToastMessage } from 'primereact/toast';\r\n \r\n interface ToastContextType {\r\n-    current: any;\r\n     showError: (message: string) => void;\r\n     showSuccess: (message: string) => void;\r\n }\r\n \r\n"
                },
                {
                    "date": 1745204423421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import { Toast } from 'primereact/toast';\r\n import { ToastMessage } from 'primereact/toast';\r\n \r\n interface ToastContextType {\r\n+    [x: string]: any;\r\n     showError: (message: string) => void;\r\n     showSuccess: (message: string) => void;\r\n }\r\n \r\n"
                },
                {
                    "date": 1745205423714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,12 @@\n \"use client\";\r\n import React, { createContext, useContext, useRef, ReactNode } from 'react';\r\n import { Toast } from 'primereact/toast';\r\n import { ToastMessage } from 'primereact/toast';\r\n+// Añade estas importaciones\r\n+import 'primereact/resources/themes/lara-light-indigo/theme.css';   // tema (o el que prefieras)\r\n+import 'primereact/resources/primereact.min.css';                    // core\r\n+import 'primeicons/primeicons.css';                                  // iconos\r\n \r\n interface ToastContextType {\r\n     [x: string]: any;\r\n     showError: (message: string) => void;\r\n"
                },
                {
                    "date": 1745462488533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,57 +1,57 @@\n-\"use client\";\r\n-import React, { createContext, useContext, useRef, ReactNode } from 'react';\r\n-import { Toast } from 'primereact/toast';\r\n-import { ToastMessage } from 'primereact/toast';\r\n-// Añade estas importaciones\r\n-import 'primereact/resources/themes/lara-light-indigo/theme.css';   // tema (o el que prefieras)\r\n-import 'primereact/resources/primereact.min.css';                    // core\r\n-import 'primeicons/primeicons.css';                                  // iconos\r\n-\r\n-interface ToastContextType {\r\n-    [x: string]: any;\r\n-    showError: (message: string) => void;\r\n-    showSuccess: (message: string) => void;\r\n-}\r\n-\r\n-const ToastContext = createContext<ToastContextType | undefined>(undefined);\r\n-\r\n-export const useToast = (): ToastContextType => {\r\n-    const context = useContext(ToastContext);\r\n-    if (!context) {\r\n-        throw new Error('useToast must be used within a ToastProvider');\r\n-    }\r\n-    return context;\r\n-};\r\n-\r\n-interface ToastProviderProps {\r\n-    children: ReactNode;\r\n-}\r\n-\r\n-export const ToastProvider: React.FC<ToastProviderProps> = ({ children }) => {\r\n-    const toast = useRef<Toast>(null);\r\n-\r\n-    const showError = (message: string) => {\r\n-        toast.current?.show({\r\n-            severity: 'error',\r\n-            summary: 'Error',\r\n-            detail: message,\r\n-            life: 3000,\r\n-        } as ToastMessage);\r\n-    };\r\n-\r\n-    const showSuccess = (message: string) => {\r\n-        toast.current?.show({\r\n-            severity: 'success',\r\n-            summary: 'Success',\r\n-            detail: message,\r\n-            life: 3000,\r\n-        } as ToastMessage);\r\n-    };\r\n-\r\n-    return (\r\n-        <ToastContext.Provider value={{ showError, showSuccess }}>\r\n-            <Toast ref={toast} />\r\n-            {children}\r\n-        </ToastContext.Provider>\r\n-    );\r\n+\"use client\";\n+import React, { createContext, useContext, useRef, ReactNode } from 'react';\n+import { Toast } from 'primereact/toast';\n+import { ToastMessage } from 'primereact/toast';\n+// Añade estas importaciones\n+import 'primereact/resources/themes/lara-light-indigo/theme.css';   // tema (o el que prefieras)\n+import 'primereact/resources/primereact.min.css';                    // core\n+import 'primeicons/primeicons.css';                                  // iconos\n+\n+interface ToastContextType {\n+    [x: string]: string|;\n+    showError: (message: string) => void;\n+    showSuccess: (message: string) => void;\n+}\n+\n+const ToastContext = createContext<ToastContextType | undefined>(undefined);\n+\n+export const useToast = (): ToastContextType => {\n+    const context = useContext(ToastContext);\n+    if (!context) {\n+        throw new Error('useToast must be used within a ToastProvider');\n+    }\n+    return context;\n+};\n+\n+interface ToastProviderProps {\n+    children: ReactNode;\n+}\n+\n+export const ToastProvider: React.FC<ToastProviderProps> = ({ children }) => {\n+    const toast = useRef<Toast>(null);\n+\n+    const showError = (message: string) => {\n+        toast.current?.show({\n+            severity: 'error',\n+            summary: 'Error',\n+            detail: message,\n+            life: 3000,\n+        } as ToastMessage);\n+    };\n+\n+    const showSuccess = (message: string) => {\n+        toast.current?.show({\n+            severity: 'success',\n+            summary: 'Success',\n+            detail: message,\n+            life: 3000,\n+        } as ToastMessage);\n+    };\n+\n+    return (\n+        <ToastContext.Provider value={{ showError, showSuccess }}>\n+            <Toast ref={toast} />\n+            {children}\n+        </ToastContext.Provider>\n+    );\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1745462510269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import 'primereact/resources/primereact.min.css';                    // core\n import 'primeicons/primeicons.css';                                  // iconos\n \n interface ToastContextType {\n-    [x: string]: string|;\n+    [x: string]: ;\n     showError: (message: string) => void;\n     showSuccess: (message: string) => void;\n }\n \n"
                },
                {
                    "date": 1745462519354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import 'primereact/resources/primereact.min.css';                    // core\n import 'primeicons/primeicons.css';                                  // iconos\n \n interface ToastContextType {\n-    [x: string]: ;\n+    [x: string] : \n     showError: (message: string) => void;\n     showSuccess: (message: string) => void;\n }\n \n"
                },
                {
                    "date": 1745462539229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,57 @@\n+\"use client\";\n+import React, { createContext, useContext, useRef, ReactNode } from 'react';\n+import { Toast } from 'primereact/toast';\n+import { ToastMessage } from 'primereact/toast';\n+// Añade estas importaciones\n+import 'primereact/resources/themes/lara-light-indigo/theme.css';   // tema (o el que prefieras)\n+import 'primereact/resources/primereact.min.css';                    // core\n+import 'primeicons/primeicons.css';                                  // iconos\n+\n+interface ToastContextType {\n+    [x: string]: any;\n+    showError: (message: string) => void;\n+    showSuccess: (message: string) => void;\n+}\n+\n+const ToastContext = createContext<ToastContextType | undefined>(undefined);\n+\n+export const useToast = (): ToastContextType => {\n+    const context = useContext(ToastContext);\n+    if (!context) {\n+        throw new Error('useToast must be used within a ToastProvider');\n+    }\n+    return context;\n+};\n+\n+interface ToastProviderProps {\n+    children: ReactNode;\n+}\n+\n+export const ToastProvider: React.FC<ToastProviderProps> = ({ children }) => {\n+    const toast = useRef<Toast>(null);\n+\n+    const showError = (message: string) => {\n+        toast.current?.show({\n+            severity: 'error',\n+            summary: 'Error',\n+            detail: message,\n+            life: 3000,\n+        } as ToastMessage);\n+    };\n+\n+    const showSuccess = (message: string) => {\n+        toast.current?.show({\n+            severity: 'success',\n+            summary: 'Success',\n+            detail: message,\n+            life: 3000,\n+        } as ToastMessage);\n+    };\n+\n+    return (\n+        <ToastContext.Provider value={{ showError, showSuccess }}>\n+            <Toast ref={toast} />\n+            {children}\n+        </ToastContext.Provider>\n+    );\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1745462568883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,12 +6,13 @@\n import 'primereact/resources/themes/lara-light-indigo/theme.css';   // tema (o el que prefieras)\n import 'primereact/resources/primereact.min.css';                    // core\n import 'primeicons/primeicons.css';                                  // iconos\n \n+// Interfaz corregida sin [x: string] que causa el error de any\n interface ToastContextType {\n-    [x: string]: any;\n     showError: (message: string) => void;\n     showSuccess: (message: string) => void;\n+    // Si necesitas propiedades adicionales, defínelas explícitamente aquí\n }\n \n const ToastContext = createContext<ToastContextType | undefined>(undefined);\n \n@@ -53,62 +54,5 @@\n             <Toast ref={toast} />\n             {children}\n         </ToastContext.Provider>\n     );\n-};\n-\"use client\";\n-import React, { createContext, useContext, useRef, ReactNode } from 'react';\n-import { Toast } from 'primereact/toast';\n-import { ToastMessage } from 'primereact/toast';\n-// Añade estas importaciones\n-import 'primereact/resources/themes/lara-light-indigo/theme.css';   // tema (o el que prefieras)\n-import 'primereact/resources/primereact.min.css';                    // core\n-import 'primeicons/primeicons.css';                                  // iconos\n-\n-interface ToastContextType {\n-    [x: string] : \n-    showError: (message: string) => void;\n-    showSuccess: (message: string) => void;\n-}\n-\n-const ToastContext = createContext<ToastContextType | undefined>(undefined);\n-\n-export const useToast = (): ToastContextType => {\n-    const context = useContext(ToastContext);\n-    if (!context) {\n-        throw new Error('useToast must be used within a ToastProvider');\n-    }\n-    return context;\n-};\n-\n-interface ToastProviderProps {\n-    children: ReactNode;\n-}\n-\n-export const ToastProvider: React.FC<ToastProviderProps> = ({ children }) => {\n-    const toast = useRef<Toast>(null);\n-\n-    const showError = (message: string) => {\n-        toast.current?.show({\n-            severity: 'error',\n-            summary: 'Error',\n-            detail: message,\n-            life: 3000,\n-        } as ToastMessage);\n-    };\n-\n-    const showSuccess = (message: string) => {\n-        toast.current?.show({\n-            severity: 'success',\n-            summary: 'Success',\n-            detail: message,\n-            life: 3000,\n-        } as ToastMessage);\n-    };\n-\n-    return (\n-        <ToastContext.Provider value={{ showError, showSuccess }}>\n-            <Toast ref={toast} />\n-            {children}\n-        </ToastContext.Provider>\n-    );\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1745462630232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n import 'primeicons/primeicons.css';                                  // iconos\n \n // Interfaz corregida sin [x: string] que causa el error de any\n interface ToastContextType {\n+    current: any;\n     showError: (message: string) => void;\n     showSuccess: (message: string) => void;\n     // Si necesitas propiedades adicionales, defínelas explícitamente aquí\n }\n"
                },
                {
                    "date": 1745462662865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n         } as ToastMessage);\n     };\n \n     return (\n-        <ToastContext.Provider value={{ showError, showSuccess }}>\n+        <ToastContext.Provider value={{ current: toast.current, showError, showSuccess }}>\n             <Toast ref={toast} />\n             {children}\n         </ToastContext.Provider>\n     );\n"
                },
                {
                    "date": 1745462802229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,14 +6,13 @@\n import 'primereact/resources/themes/lara-light-indigo/theme.css';   // tema (o el que prefieras)\n import 'primereact/resources/primereact.min.css';                    // core\n import 'primeicons/primeicons.css';                                  // iconos\n \n-// Interfaz corregida sin [x: string] que causa el error de any\n+// Interfaz corregida con tipo específico para current\n interface ToastContextType {\n-    current: any;\n+    current: Toast | null;\n     showError: (message: string) => void;\n     showSuccess: (message: string) => void;\n-    // Si necesitas propiedades adicionales, defínelas explícitamente aquí\n }\n \n const ToastContext = createContext<ToastContextType | undefined>(undefined);\n \n"
                },
                {
                    "date": 1745462819282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n import 'primereact/resources/themes/lara-light-indigo/theme.css';   // tema (o el que prefieras)\n import 'primereact/resources/primereact.min.css';                    // core\n import 'primeicons/primeicons.css';                                  // iconos\n \n-// Interfaz corregida con tipo específico para current\n+\n interface ToastContextType {\n     current: Toast | null;\n     showError: (message: string) => void;\n     showSuccess: (message: string) => void;\n"
                }
            ],
            "date": 1745190561821,
            "name": "Commit-0",
            "content": "\r\n\r\n\r\ninterface "
        }
    ]
}